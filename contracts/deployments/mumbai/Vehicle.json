{
  "address": "0x52fEb3B06616F35E26369e555b5c533F88e8E1CE",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "driver",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "vehicle_no",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "RC",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "vehicleImages",
              "type": "string"
            },
            {
              "internalType": "enum Vehicle.VEHICLE_TYPE",
              "name": "vehicleType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "driver",
              "type": "address"
            }
          ],
          "internalType": "struct Vehicle.VEHICLE_INFO",
          "name": "_vehicle",
          "type": "tuple"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "driver",
          "type": "address"
        }
      ],
      "name": "getVehicle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "vehicle_no",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "RC",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "vehicleImages",
              "type": "string"
            },
            {
              "internalType": "enum Vehicle.VEHICLE_TYPE",
              "name": "vehicleType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "driver",
              "type": "address"
            }
          ],
          "internalType": "struct Vehicle.VEHICLE_INFO",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "driver",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "vehicle_no",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "RC",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "vehicleImages",
              "type": "string"
            },
            {
              "internalType": "enum Vehicle.VEHICLE_TYPE",
              "name": "vehicleType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "driver",
              "type": "address"
            }
          ],
          "internalType": "struct Vehicle.VEHICLE_INFO",
          "name": "_vehicle",
          "type": "tuple"
        }
      ],
      "name": "updateVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xaab948bd79ea4ed0f864ae6b16227eb3e21335bae75c0b28a6f727386aa0aa15",
  "receipt": {
    "to": null,
    "from": "0x5DDAE5e1B7b159b2df28574fE93A17ec596886ce",
    "contractAddress": "0x52fEb3B06616F35E26369e555b5c533F88e8E1CE",
    "transactionIndex": 3,
    "gasUsed": "969348",
    "logsBloom": "0x
    "blockHash": "0x6ac9cdcf08de8f6669a50db2568617e284571af4f23d035085e34e12ad5e5aa9",
    "transactionHash": "0xaab948bd79ea4ed0f864ae6b16227eb3e21335bae75c0b28a6f727386aa0aa15",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 46737373,
        "transactionHash": "0xaab948bd79ea4ed0f864ae6b16227eb3e21335bae75c0b28a6f727386aa0aa15",
        "address": "0x52fEb3B06616F35E26369e555b5c533F88e8E1CE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005ddae5e1b7b159b2df28574fe93a17ec596886ce"
        ],
        "data": "0x",
        "logIndex": 7,
        "blockHash": "0x6ac9cdcf08de8f6669a50db2568617e284571af4f23d035085e34e12ad5e5aa9"
      },
      {
        "transactionIndex": 3,
        "blockNumber": 46737373,
        "transactionHash": "0xaab948bd79ea4ed0f864ae6b16227eb3e21335bae75c0b28a6f727386aa0aa15",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005ddae5e1b7b159b2df28574fe93a17ec596886ce",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000675081902b7a840000000000000000000000000000000000000000000000000876dbf22343c1e000000000000000000000000000000000000000000000072a94703ae4c10adec9000000000000000000000000000000000000000000000000080f8b709318475c00000000000000000000000000000000000000000000072a94d78b665136594d",
        "logIndex": 8,
        "blockHash": "0x6ac9cdcf08de8f6669a50db2568617e284571af4f23d035085e34e12ad5e5aa9"
      }
    ],
    "blockNumber": 46737373,
    "cumulativeGasUsed": "1272403",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6c4d168276b30f18bee757212e96e38b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"vehicle_no\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"RC\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleImages\",\"type\":\"string\"},{\"internalType\":\"enum Vehicle.VEHICLE_TYPE\",\"name\":\"vehicleType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"}],\"internalType\":\"struct Vehicle.VEHICLE_INFO\",\"name\":\"_vehicle\",\"type\":\"tuple\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"}],\"name\":\"getVehicle\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"vehicle_no\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"RC\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleImages\",\"type\":\"string\"},{\"internalType\":\"enum Vehicle.VEHICLE_TYPE\",\"name\":\"vehicleType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"}],\"internalType\":\"struct Vehicle.VEHICLE_INFO\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"vehicle_no\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"RC\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleImages\",\"type\":\"string\"},{\"internalType\":\"enum Vehicle.VEHICLE_TYPE\",\"name\":\"vehicleType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"}],\"internalType\":\"struct Vehicle.VEHICLE_INFO\",\"name\":\"_vehicle\",\"type\":\"tuple\"}],\"name\":\"updateVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vehicle.sol\":\"Vehicle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"src/Vehicle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Vehicle is Ownable {\\r\\n    enum VEHICLE_TYPE {\\r\\n        MINI,\\r\\n        PRIME,\\r\\n        SEDAN,\\r\\n        SUV\\r\\n    }\\r\\n\\r\\n    struct VEHICLE_INFO {\\r\\n        string vehicle_no;\\r\\n        string RC;\\r\\n        string vehicleImages;\\r\\n        VEHICLE_TYPE vehicleType;\\r\\n        address driver;\\r\\n    }\\r\\n\\r\\n    mapping(address => VEHICLE_INFO) internal _vehicles;\\r\\n\\r\\n    function addVehicle(address driver, VEHICLE_INFO memory _vehicle)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        VEHICLE_INFO memory vehicle;\\r\\n        vehicle = _vehicle;\\r\\n        _vehicles[driver] = vehicle;\\r\\n    }\\r\\n    function updateVehicle(address driver, VEHICLE_INFO memory _vehicle)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        VEHICLE_INFO memory vehicle;\\r\\n        vehicle = _vehicle;\\r\\n        _vehicles[driver] = vehicle;\\r\\n    }\\r\\n\\r\\n    function getVehicle(address driver)\\r\\n        public\\r\\n        view\\r\\n        onlyOwner\\r\\n        returns (VEHICLE_INFO memory)\\r\\n    {\\r\\n        return _vehicles[driver];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe6df633d451e5f3f9adec4ca4419791796476dc6be529b5ce64900a906de8933\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6110248061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806349d883831461006757806364116aa814610083578063715018a61461009f5780638da5cb5b146100a9578063a93ab101146100c7578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c9190610b5b565b610113565b005b61009d60048036038101906100989190610b5b565b610262565b005b6100a76103b1565b005b6100b16103c5565b6040516100be9190610d3f565b60405180910390f35b6100e160048036038101906100dc9190610b32565b6103ee565b6040516100ee9190610d9a565b60405180910390f35b610111600480360381019061010c9190610b32565b6106e2565b005b61011b610766565b6101236108b0565b81905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061018292919061092d565b50602082015181600101908051906020019061019f92919061092d565b5060408201518160020190805190602001906101bc92919061092d565b5060608201518160030160006101000a81548160ff0219169083600381111561020e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b61026a610766565b6102726108b0565b81905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906102d192919061092d565b5060208201518160010190805190602001906102ee92919061092d565b50604082015181600201908051906020019061030b92919061092d565b5060608201518160030160006101000a81548160ff0219169083600381111561035d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6103b9610766565b6103c360006107e4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103f66108b0565b6103fe610766565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461045890610ee3565b80601f016020809104026020016040519081016040528092919081815260200182805461048490610ee3565b80156104d15780601f106104a6576101008083540402835291602001916104d1565b820191906000526020600020905b8154815290600101906020018083116104b457829003601f168201915b505050505081526020016001820180546104ea90610ee3565b80601f016020809104026020016040519081016040528092919081815260200182805461051690610ee3565b80156105635780601f1061053857610100808354040283529160200191610563565b820191906000526020600020905b81548152906001019060200180831161054657829003601f168201915b5050505050815260200160028201805461057c90610ee3565b80601f01602080910402602001604051908101604052809291908181526020018280546105a890610ee3565b80156105f55780601f106105ca576101008083540402835291602001916105f5565b820191906000526020600020905b8154815290600101906020018083116105d857829003601f168201915b505050505081526020016003820160009054906101000a900460ff166003811115610649577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811115610681577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6106ea610766565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190610d5a565b60405180910390fd5b610763816107e4565b50565b61076e6108a8565b73ffffffffffffffffffffffffffffffffffffffff1661078c6103c5565b73ffffffffffffffffffffffffffffffffffffffff16146107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d990610d7a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a001604052806060815260200160608152602001606081526020016000600381111561090a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82805461093990610ee3565b90600052602060002090601f01602090048101928261095b57600085556109a2565b82601f1061097457805160ff19168380011785556109a2565b828001600101855582156109a2579182015b828111156109a1578251825591602001919060010190610986565b5b5090506109af91906109b3565b5090565b5b808211156109cc5760008160009055506001016109b4565b5090565b60006109e36109de84610ded565b610dbc565b9050828152602081018484840111156109fb57600080fd5b610a06848285610ea1565b509392505050565b600081359050610a1d81610fc7565b92915050565b600081359050610a3281610fde565b92915050565b600082601f830112610a4957600080fd5b8135610a598482602086016109d0565b91505092915050565b600060a08284031215610a7457600080fd5b610a7e60a0610dbc565b9050600082013567ffffffffffffffff811115610a9a57600080fd5b610aa684828501610a38565b600083015250602082013567ffffffffffffffff811115610ac657600080fd5b610ad284828501610a38565b602083015250604082013567ffffffffffffffff811115610af257600080fd5b610afe84828501610a38565b6040830152506060610b1284828501610a23565b6060830152506080610b2684828501610a0e565b60808301525092915050565b600060208284031215610b4457600080fd5b6000610b5284828501610a0e565b91505092915050565b60008060408385031215610b6e57600080fd5b6000610b7c85828601610a0e565b925050602083013567ffffffffffffffff811115610b9957600080fd5b610ba585828601610a62565b9150509250929050565b610bb881610e4a565b82525050565b610bc781610e4a565b82525050565b610bd681610e8f565b82525050565b6000610be782610e1d565b610bf18185610e28565b9350610c01818560208601610eb0565b610c0a81610fa2565b840191505092915050565b6000610c22602683610e39565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c88602083610e39565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060a0830160008301518482036000860152610cd88282610bdc565b91505060208301518482036020860152610cf28282610bdc565b91505060408301518482036040860152610d0c8282610bdc565b9150506060830151610d216060860182610bcd565b506080830151610d346080860182610baf565b508091505092915050565b6000602082019050610d546000830184610bbe565b92915050565b60006020820190508181036000830152610d7381610c15565b9050919050565b60006020820190508181036000830152610d9381610c7b565b9050919050565b60006020820190508181036000830152610db48184610cbb565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610de357610de2610f73565b5b8060405250919050565b600067ffffffffffffffff821115610e0857610e07610f73565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e5582610e6f565b9050919050565b6000819050610e6a82610fb3565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9a82610e5c565b9050919050565b82818337600083830152505050565b60005b83811015610ece578082015181840152602081019050610eb3565b83811115610edd576000848401525b50505050565b60006002820490506001821680610efb57607f821691505b60208210811415610f0f57610f0e610f44565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60048110610fc457610fc3610f15565b5b50565b610fd081610e4a565b8114610fdb57600080fd5b50565b60048110610feb57600080fd5b5056fea264697066735822122097ddffdb8ce1c7e61d5a45b5a6ce557da76ac238360e074b41465ab2bf5f2d9c64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806349d883831461006757806364116aa814610083578063715018a61461009f5780638da5cb5b146100a9578063a93ab101146100c7578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c9190610b5b565b610113565b005b61009d60048036038101906100989190610b5b565b610262565b005b6100a76103b1565b005b6100b16103c5565b6040516100be9190610d3f565b60405180910390f35b6100e160048036038101906100dc9190610b32565b6103ee565b6040516100ee9190610d9a565b60405180910390f35b610111600480360381019061010c9190610b32565b6106e2565b005b61011b610766565b6101236108b0565b81905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061018292919061092d565b50602082015181600101908051906020019061019f92919061092d565b5060408201518160020190805190602001906101bc92919061092d565b5060608201518160030160006101000a81548160ff0219169083600381111561020e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b61026a610766565b6102726108b0565b81905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906102d192919061092d565b5060208201518160010190805190602001906102ee92919061092d565b50604082015181600201908051906020019061030b92919061092d565b5060608201518160030160006101000a81548160ff0219169083600381111561035d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6103b9610766565b6103c360006107e4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103f66108b0565b6103fe610766565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461045890610ee3565b80601f016020809104026020016040519081016040528092919081815260200182805461048490610ee3565b80156104d15780601f106104a6576101008083540402835291602001916104d1565b820191906000526020600020905b8154815290600101906020018083116104b457829003601f168201915b505050505081526020016001820180546104ea90610ee3565b80601f016020809104026020016040519081016040528092919081815260200182805461051690610ee3565b80156105635780601f1061053857610100808354040283529160200191610563565b820191906000526020600020905b81548152906001019060200180831161054657829003601f168201915b5050505050815260200160028201805461057c90610ee3565b80601f01602080910402602001604051908101604052809291908181526020018280546105a890610ee3565b80156105f55780601f106105ca576101008083540402835291602001916105f5565b820191906000526020600020905b8154815290600101906020018083116105d857829003601f168201915b505050505081526020016003820160009054906101000a900460ff166003811115610649577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811115610681577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6106ea610766565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190610d5a565b60405180910390fd5b610763816107e4565b50565b61076e6108a8565b73ffffffffffffffffffffffffffffffffffffffff1661078c6103c5565b73ffffffffffffffffffffffffffffffffffffffff16146107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d990610d7a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a001604052806060815260200160608152602001606081526020016000600381111561090a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82805461093990610ee3565b90600052602060002090601f01602090048101928261095b57600085556109a2565b82601f1061097457805160ff19168380011785556109a2565b828001600101855582156109a2579182015b828111156109a1578251825591602001919060010190610986565b5b5090506109af91906109b3565b5090565b5b808211156109cc5760008160009055506001016109b4565b5090565b60006109e36109de84610ded565b610dbc565b9050828152602081018484840111156109fb57600080fd5b610a06848285610ea1565b509392505050565b600081359050610a1d81610fc7565b92915050565b600081359050610a3281610fde565b92915050565b600082601f830112610a4957600080fd5b8135610a598482602086016109d0565b91505092915050565b600060a08284031215610a7457600080fd5b610a7e60a0610dbc565b9050600082013567ffffffffffffffff811115610a9a57600080fd5b610aa684828501610a38565b600083015250602082013567ffffffffffffffff811115610ac657600080fd5b610ad284828501610a38565b602083015250604082013567ffffffffffffffff811115610af257600080fd5b610afe84828501610a38565b6040830152506060610b1284828501610a23565b6060830152506080610b2684828501610a0e565b60808301525092915050565b600060208284031215610b4457600080fd5b6000610b5284828501610a0e565b91505092915050565b60008060408385031215610b6e57600080fd5b6000610b7c85828601610a0e565b925050602083013567ffffffffffffffff811115610b9957600080fd5b610ba585828601610a62565b9150509250929050565b610bb881610e4a565b82525050565b610bc781610e4a565b82525050565b610bd681610e8f565b82525050565b6000610be782610e1d565b610bf18185610e28565b9350610c01818560208601610eb0565b610c0a81610fa2565b840191505092915050565b6000610c22602683610e39565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c88602083610e39565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060a0830160008301518482036000860152610cd88282610bdc565b91505060208301518482036020860152610cf28282610bdc565b91505060408301518482036040860152610d0c8282610bdc565b9150506060830151610d216060860182610bcd565b506080830151610d346080860182610baf565b508091505092915050565b6000602082019050610d546000830184610bbe565b92915050565b60006020820190508181036000830152610d7381610c15565b9050919050565b60006020820190508181036000830152610d9381610c7b565b9050919050565b60006020820190508181036000830152610db48184610cbb565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610de357610de2610f73565b5b8060405250919050565b600067ffffffffffffffff821115610e0857610e07610f73565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e5582610e6f565b9050919050565b6000819050610e6a82610fb3565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9a82610e5c565b9050919050565b82818337600083830152505050565b60005b83811015610ece578082015181840152602081019050610eb3565b83811115610edd576000848401525b50505050565b60006002820490506001821680610efb57607f821691505b60208210811415610f0f57610f0e610f44565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60048110610fc457610fc3610f15565b5b50565b610fd081610e4a565b8114610fdb57600080fd5b50565b60048110610feb57600080fd5b5056fea264697066735822122097ddffdb8ce1c7e61d5a45b5a6ce557da76ac238360e074b41465ab2bf5f2d9c64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/Vehicle.sol:Vehicle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1226,
        "contract": "src/Vehicle.sol:Vehicle",
        "label": "_vehicles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(VEHICLE_INFO)1221_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(VEHICLE_TYPE)1209": {
        "encoding": "inplace",
        "label": "enum Vehicle.VEHICLE_TYPE",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(VEHICLE_INFO)1221_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Vehicle.VEHICLE_INFO)",
        "numberOfBytes": "32",
        "value": "t_struct(VEHICLE_INFO)1221_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(VEHICLE_INFO)1221_storage": {
        "encoding": "inplace",
        "label": "struct Vehicle.VEHICLE_INFO",
        "members": [
          {
            "astId": 1211,
            "contract": "src/Vehicle.sol:Vehicle",
            "label": "vehicle_no",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1213,
            "contract": "src/Vehicle.sol:Vehicle",
            "label": "RC",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1215,
            "contract": "src/Vehicle.sol:Vehicle",
            "label": "vehicleImages",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 1218,
            "contract": "src/Vehicle.sol:Vehicle",
            "label": "vehicleType",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(VEHICLE_TYPE)1209"
          },
          {
            "astId": 1220,
            "contract": "src/Vehicle.sol:Vehicle",
            "label": "driver",
            "offset": 1,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      }
    }
  }
}